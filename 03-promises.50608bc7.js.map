{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAsBA,SAASC,EAAcC,EAAUC,GAG/B,IAAMC,EAAgBC,KAAKC,SAAW,GAC5B,IAAIC,SAAQ,SAACC,EAASC,GAC9BC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAGFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAhB,GAASiB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAtCzES,SAAW,CACTC,KAAMC,SAASC,cAAc,SAC7BZ,MAAOW,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,yBAsCjCH,SAASC,KAAKK,iBAAiB,UAlC/B,SAAgBC,GACdA,EAAIC,iBAKJ,IAJA,IAAIjB,EAAQkB,OAAOT,SAAST,MAAMmB,OAC5BN,EAAOK,OAAOT,SAASI,KAAKM,OAC5BL,EAASI,OAAOT,SAASK,OAAOK,OAE7BC,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAChC/B,EAAc+B,EAAGpB,GACjBA,GAASa,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nelements = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\nlet promise;\n\nfunction submit(evt) {\n  evt.preventDefault();\n  let delay = Number(elements.delay.value);\n  const step = Number(elements.step.value);\n  const amount = Number(elements.amount.value);\n  let position;\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  // position = Number(elements.amount.value);\n\n  const shouldResolve = Math.random() > 0.3;\n  promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nelements.form.addEventListener('submit', submit);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","elements","form","document","querySelector","step","amount","addEventListener","evt","preventDefault","Number","value","i"],"version":3,"file":"03-promises.50608bc7.js.map"}